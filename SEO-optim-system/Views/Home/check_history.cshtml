@model List<SEO_optim_system.ViewModel.AnalyeseViewModel>;
@{
    ViewData["Title"] = "История проверки";
    int i = 0;
}

<script src="~/lib/ChartJs/Chart.bundle.min.js"></script>

<main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="mb-3">История проверок</h1>
    </div>
    <p>
        На данной странице можно помотреть статистику по проверке сайтов.
        Вычисления происходят по следующей формуле
    </p>
    <img src="~/files/form.jpg" width="250" class="mb-2" style="display:block; justify-content:center; margin-left:auto; margin-right: auto"/>

    @foreach (var temp in Model)
    {
        <div class="accordion" id="accordion">
            <div class="card">
                <div class="card-header p-0" id="heading-@i">
                    <h2 class="mb-0">
                        <button class="btn btn-link w-100" type="button" data-toggle="collapse" data-target="#collapse-@i" aria-expanded="true" aria-controls="collapse-@i">
                            @temp.Url
                        </button>
                    </h2>
                </div>
                <div id="collapse-@i" class="collapse" aria-labelledby="heading-@i" data-parent="#accordion">
                    <div class="card-body">
                        <canvas id="Chart-@i" style="width: 100%"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <script>
			var ctx = document.getElementById('Chart-@i').getContext('2d');
			var config = {
				type: 'line',
				data: {
					labels: [
						@foreach (var item in temp.AnalysisList)
						{
							@: "@item.Date.ToString("d")",
						}
						],
					datasets: [{
						label: 'Рейтинг',
						backgroundColor: "#FF5733",
						data: [
							@foreach (var item in temp.AnalysisList)
						{
							@: @item.Rate.ToString().Replace(",","."),
						}
						],
                        fill: false
					}]
				},
				options: {
					responsive: true,
					title: {
						display: true
					},
					tooltips: {
						mode: 'index',
                        intersect: false,
                        custom: function(tooltipModel) {
                            var tooltipEl = document.getElementById('chartjs-tooltip');
                            var i;
                            if (!tooltipEl) {
                                tooltipEl = document.createElement('div');
                                tooltipEl.id = 'chartjs-tooltip';
                                tooltipEl.innerHTML = '<table></table>';
                                document.body.appendChild(tooltipEl);
                            }
                            if (tooltipModel.opacity === 0) {
                                tooltipEl.style.opacity = 0;
                                return;
                            }
                            tooltipEl.classList.remove('above', 'below', 'no-transform');
                            if (tooltipModel.yAlign) {
                                tooltipEl.classList.add(tooltipModel.yAlign);
                            } else {
                                tooltipEl.classList.add('no-transform');
                            }
                            function getBody(bodyItem) {
                                return bodyItem.lines;
                            }
                            if (tooltipModel.body) {
                                var titleLines = tooltipModel.title || [];
                                var bodyLines = tooltipModel.body.map(getBody);
                                var innerHtml = '<thead>';
                                titleLines.forEach(function(title) {
                                    innerHtml += '<tr><th>' + "Спам: " + @foreach (var item in temp.AnalysisList)
						            {
							            @: "@item.Spam",
						            } + '</th></tr>';
                                });
                                titleLines.forEach(function(title) {
                                    innerHtml += '<tr><th>' + "Траст: " + @foreach (var item in temp.AnalysisList)
						            {
							            @: "@item.Trust",
						            } + '</th></tr>';
                                });
                                titleLines.forEach(function(title) {
                                    innerHtml += '<tr><th>' + "ИКС: " + @foreach (var item in temp.AnalysisList)
						            {
							            @: "@item.SQI",
						            } + '</th></tr>';
                                });
                                innerHtml += '</thead><tbody>';
                                bodyLines.forEach(function(body, i) {
                                    var colors = tooltipModel.labelColors[i];
                                    var style = 'background:' + colors.backgroundColor;
                                });
                                innerHtml += '</tbody>';
                                var tableRoot = tooltipEl.querySelector('table');
                                tableRoot.innerHTML = innerHtml;
                            }
                            var position = this._chart.canvas.getBoundingClientRect();
                            tooltipEl.style.opacity = 1;
                            tooltipEl.style.position = 'absolute';
                            tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';
                            tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY + 'px';
                            tooltipEl.style.fontFamily = tooltipModel._bodyFontFamily;
                            tooltipEl.style.fontSize = tooltipModel.bodyFontSize + 'px';
                            tooltipEl.style.fontStyle = tooltipModel._bodyFontStyle;
                            tooltipEl.style.padding = tooltipModel.yPadding + 'px ' + tooltipModel.xPadding + 'px';
                            tooltipEl.style.pointerEvents = 'none';
                        }
					},
					hover: {
						mode: 'nearest',
						intersect: true
					},
					scales: {
						xAxes: [{
							display: true,
							scaleLabel: {
								display: true,
								labelString: 'Дата'
                            }
						}],
						yAxes: [{
							display: true,
							scaleLabel: {
								display: true,
								labelString: 'Значение'
                            },
                            ticks: {
                                beginAtZero: true,
                                max:10
                            }
						}]
					}
				}
			};
			window.myLine = new Chart(ctx, config);
        </script>
        i++;
    }
</main>


